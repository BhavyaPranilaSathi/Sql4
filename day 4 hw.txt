day 4 hw:



prob 1: no of seniors and juniors to join the company


WITH CTE AS (
    SELECT employee_id, experience, SUM(salary) OVER(PARTITION BY experience ORDER BY salary) AS rsum 
    FROM Candidates
),
ACTE AS (
    SELECT 70000 - IFNULL(MAX(rsum), 0) AS remaining 
    FROM CTE 
    WHERE experience = 'Senior' AND rsum <= 70000
)

SELECT 'Senior' AS experience, COUNT(employee_id) AS accepted_candidates 
FROM CTE 
WHERE experience = 'Senior' AND rsum <= 70000
UNION
SELECT 'Junior' AS experience, COUNT(employee_id) AS accepted_candidates 
FROM CTE 
WHERE experience = 'Junior' AND rsum <= (SELECT remaining FROM ACTE);




prob 2: league statistics


WITH cte AS(
    SELECT home_team_id AS t1,away_team_id AS t2,home_team_goals AS g1,away_team_goals AS g2 
    FROM Matches
    UNION ALL 
    SELECT away_team_id AS t1,home_team_id AS t2,away_team_goals AS g1,home_team_goals AS g2
    FROM Matches
    )


SELECT t.team_name ,COUNT(c.t1) AS matches_played, SUM(
    CASE 
        WHEN c.g1>c.g2 THEN 3 
        WHEN c.g1=c.g2 THEN 1 
        ELSE 0
    END ) AS points,
SUM(c.g1) AS goal_for, SUM(c.g2) AS goal_against, SUM(c.g1)-SUM(c.g2) AS goal_diff 
FROM cte c JOIN Teams t ON c.t1=t.team_id
GROUP BY c.t1 
ORDER BY points DESC,goal_diff DESC,t.team_name





prob 3:  sales person


SELECT name FROM SalesPerson
WHERE sales_id NOT IN(
	SELECT DISTINCT s.sales_id 
	FROM SalesPerson s 
	LEFT JOIN Orders o ON s.sales_id = o.sales_id
	LEFT JOIN Company c ON o.com_id = c.com_id
	WHERE c.name = "red" 
)





prob 4:  friend request 2


WITH cte AS (
    SELECT requester_id AS id FROM RequestAccepted
    UNION ALL
    select accepter_id AS id FROM RequestAccepted
)

SELECT id , COUNT(id) AS num FROM cte
GROUP BY id
ORDER BY num DESC
LIMIT 1





SELECT requester_id AS id,
       (SELECT COUNT(*) FROM RequestAccepted
            WHERE id=requester_id OR id=accepter_id) AS num
FROM RequestAccepted
UNION 
SELECT accepter_id AS id,
    (SELECT COUNT(*) FROM RequestAccepted  
    WHERE (requester_id = id OR accepter_id = id)) AS num
FROM RequestAccepted
ORDER BY num DESC 
LIMIT 1; 

